summary(hd)
str(gii)
#see the dimension of lrn2014
dim(gii)
#184 rows and 60 columns
head(gii)
summary(gii)
#rename variables
names(hd)[3] <- "HDI_Index"
names(hd)[4] <- "life_exp"
names(hd)[5] <- "exp_edu"
names(hd)[6] <- "avg_edu"
names(hd)[7] <- "GNI_per_cap"
names(hd)[8] <- "GNI_HDI_rank_diff"
colnames(hd)
#rename variables
names(gii)[3] <- "GII_Index"
names(gii)[4] <- "mat_mor_rat"
names(gii)[5] <- "adol_birth_rat"
names(gii)[6] <- "fem_parlimen"
names(gii)[7] <- "fem_high_edu"
names(gii)[8] <- "male_high_edu"
names(gii)[9] <- "fem_working"
names(gii)[10] <- "male_working"
colnames(gii)
#mutate gender inequality data
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr);
library(plyr)
# define 2 new columns in gii data
gii <- mutate(gii, gii_FM_edu_rat = fem_high_edu / male_high_edu)
gii <- mutate(gii, gii_FM_work_rat = fem_working / male_working)
colnames(gii)
#join the data
hd$Country
gii$Country
#join both datasets by Country
human=join(hd, gii,type = "inner")
human$Country
#write data to file
write.table(human, file = "human.txt", quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
library(stringr)
names(human)
human$GNI_per_cap
str_replace(human$GNI_per_cap, pattern=",",replace="") %>% as.numeric() %>% print()
#mutate human
human <- mutate(human, GNI = str_replace(human$GNI_per_cap, pattern=",",replace="") %>% as.numeric())
#keep only "Country", "gii_FM_edu_rat", "gii_FM_work_rat", "exp_edu", "life_exp", "GNI", "mat_mor_rat", "adol_birth_rat", "fem_parlimen"
keep_columns<-c("Country", "gii_FM_edu_rat", "gii_FM_work_rat", "exp_edu", "life_exp", "GNI", "mat_mor_rat", "adol_birth_rat", "fem_parlimen")
human_new<-select(human,one_of(keep_columns))
complete.cases(human_new)
human_no_NA=filter(human, complete.cases(human_new))
human_no_NA
human_no_NA$Country
last=nrow(human_no_NA)-7
human_=human[1:last,]
rownames(human_)=human_$Country
human_=human_[,-1]
#write data to file
write.table(human_, file = "human.txt", quote = FALSE, sep = "\t", row.names = TRUE, col.names = TRUE)
human = read.table(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt"), sep="\t",header=TRUE)
human
human$Country
#write data to file
write.table(human, file = "human.txt", quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
library(stringr)
names(human)
human$GNI_per_cap
str_replace(human$GNI_per_cap, pattern=",",replace="") %>% as.numeric() %>% print()
library(stringr)
names(human)
human$GNI_per_cap
str_replace(human$GNI_per_cap, pattern=",",replace="") %>% as.numeric() %>% print()
#mutate human
human <- mutate(human, GNI = str_replace(human$GNI_per_cap, pattern=",",replace="") %>% as.numeric())
#keep only "Country", "gii_FM_edu_rat", "gii_FM_work_rat", "exp_edu", "life_exp", "GNI", "mat_mor_rat", "adol_birth_rat", "fem_parlimen"
keep_columns<-c("Country", "gii_FM_edu_rat", "gii_FM_work_rat", "exp_edu", "life_exp", "GNI", "mat_mor_rat", "adol_birth_rat", "fem_parlimen")
human_new<-select(human,one_of(keep_columns))
complete.cases(human_new)
human_no_NA=filter(human_new, complete.cases(human_new))
human_no_NA
complete.cases(human_new)
human_no_NA=filter(human_new, complete.cases(human_new))
human_no_NA
human_no_NA$Country
last=nrow(human_no_NA)-7
human_=human[1:last,]
rownames(human_)=human_$Country
human_=human_[,-1]
#write data to file
write.table(human_, file = "human2.txt", quote = FALSE, sep = "\t", row.names = TRUE, col.names = TRUE)
human = read.table("human2.txt", sep="\t",header=TRUE)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
human = read.table("human2.txt", sep=" ",dec=",",header=TRUE)
str(human)
human = read.table("human2.txt", sep="/t",dec=",",header=TRUE)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
uman
human
human
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
human_$Country
human_no_NA$Country
last=nrow(human_no_NA)-7
human_=human_no_NA[1:last,]
rownames(human_)=human_$Country
human_=human_[,-1]
#write data to file
write.table(human_, file = "human2.txt", quote = FALSE, sep = "\t", row.names = TRUE, col.names = TRUE)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
p <- ggpairs(human2, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p <- ggpairs(human, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs(learning2014[-1])
p <- ggpairs(human, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
$ gii_FM_edu_rat : Factor w/ 138 levels "","0.197986577181208",..: 111 103 90 93 84 99 118 109 107 104 ...
$ gii_FM_work_rat: Factor w/ 142 levels "","0.185694635488308",..: 129 102 104 126 106 93 80 101 121 111 ...
$ exp_edu        : Factor w/ 77 levels "","10","10.1",..: 60 67 49 64 62 55 63 55 50 66 ...
$ life_exp       : Factor w/ 103 levels "","49","49.8",..: 93 99 101 86 93 91 91 83 97 95 ...
$ GNI            : int  64992 42261 56431 44025 45435 43919 39568 52947 42155 32689 ...
$ mat_mor_rat    : int  4 6 6 5 6 7 9 28 11 8 ...
$ adol_birth_rat : Factor w/ 127 levels "","0.6","1.9",..: 100 13 3 78 90 49 111 51 23 37 ...
$ fem_parlimen
adol_birth_rat
gii_FM_edu_rat = as.numeric(gii_FM_edu_rat)
gii_FM_work_rat = as.numeric(gii_FM_work_rat)
exp_edu = as.numeric(exp_edu)
life_exp = as.numeric(life_exp)
adol_birth_rat = as.numeric(adol_birth_rat)
fem_parlimen = as.numeric(fem_parlimen)
human$gii_FM_edu_rat = as.numeric(human$gii_FM_edu_rat)
human$gii_FM_work_rat = as.numeric(human$gii_FM_work_rat)
human$exp_edu = as.numeric(human$exp_edu)
human$life_exp = as.numeric(human$life_exp)
human$adol_birth_rat = as.numeric(human$adol_birth_rat)
human$fem_parlimen = as.numeric(human$fem_parlimen)
p <- ggpairs(human, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
# calculate the correlation matrix and round it
cor_matrix<-cor(human)
# print the correlation matrix
cor_matrix %>% round(2)  %>% print()
library(corrplot)
cor.mtest <- function(mat, conf.level = 0.95){
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for(i in 1:(n-1)){
for(j in (i+1):n){
tmp <- cor.test(mat[,i], mat[,j], conf.level = conf.level)
p.mat[i,j] <- p.mat[j,i] <- tmp$p.value
lowCI.mat[i,j] <- lowCI.mat[j,i] <- tmp$conf.int[1]
uppCI.mat[i,j] <- uppCI.mat[j,i] <- tmp$conf.int[2]
}
}
return(list(p.mat, lowCI.mat, uppCI.mat))
}
res1 <- cor.mtest(Boston,0.95)
# visualize the correlation matrix
corrplot.mixed(cor_matrix,tl.cex=0.5,p.mat = res1[[1]], insig = "blank"
,mar=c(1,0,2,0),number.cex=0.7, title="Correlation between variables")
res1 <- cor.mtest(human,0.95)
# visualize the correlation matrix
corrplot.mixed(cor_matrix,tl.cex=0.5,p.mat = res1[[1]], insig = "blank"
,mar=c(1,0,2,0),number.cex=0.7, title="Correlation between variables")
pca_human <- prcomp(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2")
is.na(human)
is.na(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2"))
is.na(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2"))
is.na(human)
)
colSums(is.na(human))
res1 <- cor.mtest(human,0.95)
# visualize the correlation matrix
corrplot.mixed(cor_matrix,tl.cex=0.5,p.mat = res1[[1]], insig = "blank"
,mar=c(1,0,2,0),number.cex=0.7, title="Correlation between variables")
pca_human <- prcomp(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2"))
colSums(is.na(human))
pca_human
res1 <- cor.mtest(human,0.95)
# visualize the correlation matrix
corrplot.mixed(cor_matrix,tl.cex=0.5,p.mat = res1[[1]], insig = "blank"
,mar=c(1,0,2,0),number.cex=0.7, title="Correlation between variables")
pca_human <- prcomp(human)
colSums(is.na(human))
human$GNI
human$mat_mor_rat
complete.cases(human_new)
human_no_NA=filter(human_new, complete.cases(human_new))
complete.cases(human_no_NA)
human_no_NA$Country
last=nrow(human_no_NA)-7
human_=human_no_NA[1:last,]
complete.cases(human_no_NA)
complete.cases(human_)
rownames(human_)=human_$Country
human_=human_[,-1]
#write data to file
write.table(human_, file = "human2.txt", quote = FALSE, sep = "\t", row.names = TRUE, col.names = TRUE)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
human = read.table("human2.txt", sep="\t",dec=",",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human_)
dim(human)
human_$Country
rownames(human_)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
write.table(human_, file = "human2.txt", quote = FALSE, sep = ";", row.names = TRUE, col.names = TRUE)
human = read.table("human2.txt", sep=";",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
head(human)
tail(human)
human = read.table("human3.txt", sep=";",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human = read.table("human3.txt", sep=";",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human = read.table("human2.txt", sep=";",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
write.table(human_, file = "human2.txt", quote = FALSE, sep = "\t", row.names = TRUE, col.names = TRUE)
human_$Country
rownames(human_)
human = read.table("human2.txt", sep=";",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human$gii_FM_edu_rat = as.numeric(human$gii_FM_edu_rat)
human$gii_FM_work_rat = as.numeric(human$gii_FM_work_rat)
human$exp_edu = as.numeric(human$exp_edu)
human$life_exp = as.numeric(human$life_exp)
human$adol_birth_rat = as.numeric(human$adol_birth_rat)
human$fem_parlimen = as.numeric(human$fem_parlimen)
# create a more advanced plot matrix with ggpairs(learning2014[-1])
p <- ggpairs(human, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
# calculate the correlation matrix and round it
cor_matrix<-cor(human)
# print the correlation matrix
cor_matrix %>% round(2)  %>% print()
library(corrplot)
cor.mtest <- function(mat, conf.level = 0.95){
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for(i in 1:(n-1)){
for(j in (i+1):n){
tmp <- cor.test(mat[,i], mat[,j], conf.level = conf.level)
p.mat[i,j] <- p.mat[j,i] <- tmp$p.value
lowCI.mat[i,j] <- lowCI.mat[j,i] <- tmp$conf.int[1]
uppCI.mat[i,j] <- uppCI.mat[j,i] <- tmp$conf.int[2]
}
}
return(list(p.mat, lowCI.mat, uppCI.mat))
}
res1 <- cor.mtest(human,0.95)
colSums(is.na(human))
human$GNI
human$mat_mor_rat
# visualize the correlation matrix
corrplot.mixed(cor_matrix,tl.cex=0.5,p.mat = res1[[1]], insig = "blank"
,mar=c(1,0,2,0),number.cex=0.7, title="Correlation between variables")
pca_human <- prcomp(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2"))
human = read.table("human2.txt", sep="\t",header=TRUE)
human = read.table("human2.txt", sep="\t",header=TRUE)
human = read.table("human2.txt", sep="\t",header=TRUE)
human = read.table("human2.txt", sep="\t",header=TRUE)
human = read.table("human2.txt", sep="\t",header=TRUE)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
human$gii_FM_edu_rat = as.numeric(human$gii_FM_edu_rat)
human$gii_FM_work_rat = as.numeric(human$gii_FM_work_rat)
human$exp_edu = as.numeric(human$exp_edu)
human$life_exp = as.numeric(human$life_exp)
human$adol_birth_rat = as.numeric(human$adol_birth_rat)
human$fem_parlimen = as.numeric(human$fem_parlimen)
human$gii_FM_edu_rat
str(human)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
str(human)
human = read.table("human2.txt", sep="\t",header=TRUE)
dim(human)
str(human)
human_
tail(human_,30)
human_no_NA$Country
last=nrow(human_no_NA)-7
human_=human_no_NA[1:last,]
complete.cases(human_)
write.table(human_, file = "human2_a.txt", quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
human = read.table("human2a.txt", sep="\t",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
human = read.table("human2a.txt", sep="\t",header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
getwd()
human = read.table("human2_a.txt", sep="\t",header=TRUE)
human = read.table("human2_a.txt", sep="\t", quote = "", stringsAsFactors = FALSE, header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
getwd()
human = read.table("human2.txt", sep="\t", quote = "", stringsAsFactors = FALSE, header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
complete.cases(human)
dim(human)
tail(human)
# create a more advanced plot matrix with ggpairs(learning2014[-1])
p <- ggpairs(human, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
# calculate the correlation matrix and round it
cor_matrix<-cor(human)
cor_matrix %>% round(2)  %>% print()
library(corrplot)
cor.mtest <- function(mat, conf.level = 0.95){
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for(i in 1:(n-1)){
for(j in (i+1):n){
tmp <- cor.test(mat[,i], mat[,j], conf.level = conf.level)
p.mat[i,j] <- p.mat[j,i] <- tmp$p.value
lowCI.mat[i,j] <- lowCI.mat[j,i] <- tmp$conf.int[1]
uppCI.mat[i,j] <- uppCI.mat[j,i] <- tmp$conf.int[2]
}
}
return(list(p.mat, lowCI.mat, uppCI.mat))
}
res1 <- cor.mtest(human,0.95)
colSums(is.na(human))
human$GNI
human$mat_mor_rat
# visualize the correlation matrix
corrplot.mixed(cor_matrix,tl.cex=0.5,p.mat = res1[[1]], insig = "blank"
,mar=c(1,0,2,0),number.cex=0.7, title="Correlation between variables")
pca_human <- prcomp(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2"))
summary(human)
pca_human <- prcomp(human)
gather(human) %>% ggplot(aes(value))
+ facet_wrap("key", scales="free") +
geom_bar() + theme (axis.text.x=element_text(angle=45,
hjust=1, size=8))
gather(human) %>% ggplot(aes(value)) + facet_wrap("key", scales="free") +
geom_bar() + theme (axis.text.x=element_text(angle=45, hjust=1, size=8))
library(dplyr)
library(tidyr)
gather(human) %>% ggplot(aes(value)) + facet_wrap("key", scales="free") +
geom_bar() + theme (axis.text.x=element_text(angle=45, hjust=1, size=8))
s<-summary(pca_human)
s
pca_pr<-round(100*s$importance[2,], digits=1)
pca_pr
pca_lab<-paste0(names(pca_pr),"(",pca_pr,"%)")
biplot(pca_human, cex=c(0.8,1)col=c(grey40","deeppink2"),xlab=pc_lab[1],ylab=pc_lab[2])
biplot(pca_human, cex=c(0.8,1),col=c(grey40","deeppink2"),xlab=pc_lab[1],ylab=pc_lab[2])
biplot(pca_human, cex=c(0.8,1),col=c("grey40","deeppink2"),xlab=pc_lab[1],ylab=pc_lab[2])
pc_lab<-paste0(names(pca_pr),"(",pca_pr,"%)")
biplot(pca_human, cex=c(0.8,1),col=c("grey40","deeppink2"),xlab=pc_lab[1],ylab=pc_lab[2])
#pca
pca_human <- prcomp(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40",deeppink2"))
s<-summary(pca_human)
s
pca_pr<-round(100*s$importance[2,], digits=1)
pca_pr
pc_lab<-paste0(names(pca_pr),"(",pca_pr,"%)")
biplot(pca_human, cex=c(0.8,1),col=c("grey40","deeppink2"),xlab=pc_lab[1],ylab=pc_lab[2])
human = read.table("human2.txt", sep="\t", quote = "", stringsAsFactors = FALSE, header=TRUE)
dim(human)
str(human)
library(GGally)
library(ggplot2)
library(dplyr)
library(tidyr)
complete.cases(human)
dim(human)
summary(human)
pca_human <- prcomp(human)
biplot(pca_human, choices =1:2, cex=c(0.8,1),col=c("grey40","deeppink2"))
s<-summary(pca_human)
s
pca_pr<-round(100*s$importance[2,], digits=1)
pca_pr
pc_lab<-paste0(names(pca_pr),"(",pca_pr,"%)")
biplot(pca_human, cex=c(0.8,1),col=c("grey40","deeppink2"),xlab=pc_lab[1],ylab=pc_lab[2])
install.packages("Factominer")
install.packages("FactoMineR")
library(FactoMineR)
human_scaled <- scale(human)
human_scaled=as.data.frame(human_scaled)
pca_human <- prcomp(human_scaled)
s<-summary(human_scaled)
s
pca_pr<-round(100*s$importance[2,], digits=1)
s
load("D:/IODS-project/data/.RData")
knitr::opts_chunk$set(echo = TRUE)
human_scaled <- scale(human)
human_scaled=as.data.frame(human_scaled)
